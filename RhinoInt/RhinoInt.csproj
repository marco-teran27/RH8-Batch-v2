<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<!-- Select the framework(s) you wish to target.
                Rhino 6: net45
                Rhino 7: net48
                Rhino 8 Windows: net48, net7.0, net7.0-windows, net7.0-windows10.0.22000.0, etc
                Rhino 8 Mac: net7.0, net7.0-macos, net7.0-macos12.0, etc
            -->
		<TargetFrameworks>net7.0-windows</TargetFrameworks>
		<EnableDynamicLoading>true</EnableDynamicLoading>
		<TargetExt>.rhp</TargetExt>
		<NoWarn>NU1701;NETSDK1086</NoWarn>
		<EnableWindowsTargeting>true</EnableWindowsTargeting>
	</PropertyGroup>

	<PropertyGroup>
		<!-- Specifies information for Assembly and Yak -->
		<AssemblyName>BatchProcessor</AssemblyName>
		<Version>2.0.1</Version>
		<Title>BatchProcessor</Title>
		<Company>TomiDoki Authors</Company>
		<Description>Processes rhino file(s), with GH/Py scipts, based on patient IDs | version 1.0</Description>
	</PropertyGroup>

	<ItemGroup>
		<None Update="manifest.yml" CopyToOutputDirectory="PreserveNewest" />
		<None Update="README.md" CopyToOutputDirectory="PreserveNewest" Condition="Exists('README.md')" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="EmbeddedResources\plugin-utility.ico" />
	</ItemGroup>
	
	<ItemGroup>
		<PackageReference Include="Grasshopper" Version="8.17.25066.7001" />
		<PackageReference Include="RhinoCommon" Version="8.17.25066.7001" ExcludeAssets="runtime" />
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />
	</ItemGroup>

	<!-- For Windows only builds -->
	<PropertyGroup Condition="$(TargetFramework.Contains('-windows')) or $(TargetFramework.StartsWith('net4'))">
		<UseWindowsForms>true</UseWindowsForms>
	</PropertyGroup>

	<!-- Reference WinForms for .NET 7.0 on macOS -->
	<ItemGroup>
		<!-- Condition="!($(TargetFramework.Contains('-windows')) or $(TargetFramework.StartsWith('net4')))"> -->
		<!-- Rhino 8.11 and later you can use this -->
		<FrameworkReference Include="Microsoft.WindowsDesktop.App.WindowsForms" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Interfaces\Interfaces.csproj" />
		<ProjectReference Include="..\DInjection\DInjection.csproj" />
	</ItemGroup>
	
	<Target Name="BuildYakPackage" AfterTargets="DispatchToInnerBuilds">
		<PropertyGroup>
			<!-- Dynamically determine the Yak executable path based on Rhino installation -->
			<YakExecutable Condition="$(YakExecutable) == '' and $([MSBuild]::IsOSPlatform('Windows')) and Exists('C:\Program Files\Rhino 8\System\Yak.exe')">C:\Program Files\Rhino 8\System\Yak.exe</YakExecutable>
			<YakExecutable Condition="$(YakExecutable) == '' and $([MSBuild]::IsOSPlatform('Windows')) and Exists('$(APPDATA)\McNeel\Rhinoceros\8.0\System\Yak.exe')">$(APPDATA)\McNeel\Rhinoceros\8.0\System\Yak.exe</YakExecutable>

			<!-- Enable Yak package build only if the executable is found -->
			<BuildYakPackage Condition="$(BuildYakPackage) == '' and '$(YakExecutable)' != '' and Exists('$(YakExecutable)')">True</BuildYakPackage>
		</PropertyGroup>

		<Warning Text="Could not find Yak executable at '$(YakExecutable)'. Skipping Yak package build." Condition="'$(BuildYakPackage)' != 'True'" />

		<ItemGroup>
			<YakPackagesToDelete Include="$(OutputPath)\*.yak;$(OutputPath)\**\manifest.yml" />
		</ItemGroup>

		<Delete Files="@(YakPackagesToDelete)" Condition="'$(BuildYakPackage)' == 'True'" />

		<Exec Command="&quot;$(YakExecutable)&quot; spec" WorkingDirectory="$(OutputPath)" Condition="'$(BuildYakPackage)' == 'True'" />
		<Exec Command="&quot;$(YakExecutable)&quot; build" WorkingDirectory="$(OutputPath)" Condition="'$(BuildYakPackage)' == 'True'" />
	</Target>

</Project>